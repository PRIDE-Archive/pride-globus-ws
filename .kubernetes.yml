apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: $log_volume_pvc
spec:
  storageClassName: $k8s_storageclass
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: $log_volume_size
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $app_name
  labels:
    app: $app_name
spec:
  replicas: $k8s_replicas
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: $app_name
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: $app_name
    spec:
      imagePullSecrets:
        - name: $DOCKER_PULL_SECRET
      volumes:
        - name: logvolume
          persistentVolumeClaim:
            claimName: $log_volume_pvc
        - name: application-config
          configMap:
            name: $CONFIG_INI
            items:
              - key: config.ini
                path: config.ini
      containers:
        - name: $app_name
          image: $IMAGE
          imagePullPolicy: Always
          env:
            - name: HTTPS_PROXY
              value: $HTTPS_PROXY
          ports:
            - containerPort: $PORT
          volumeMounts:
            - name: application-config
              mountPath: /app/config.ini
              subPath: config.ini
              readOnly: true
            - name: logvolume
              mountPath: $LOGS_PATH
          livenessProbe:
            httpGet:
              path: /health
              port: $PORT
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 120
          readinessProbe:
            httpGet:
              path: /health
              port: $PORT
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 120
---
apiVersion: v1
kind: Service
metadata:
  name: $app_name-service
spec:
  selector:
    app: $app_name
  ports:
    - protocol: TCP
      port: $PORT
      targetPort: $PORT
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $app_name-filebeat
  labels:
    app: $app_name-filebeat
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: $app_name-filebeat
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: $app_name-filebeat
    spec:
      volumes:
        - name: logvolume
          persistentVolumeClaim:
            claimName: $log_volume_pvc
        - name: filebeat-config
          configMap:
            name: $FILEBEAT_CONFIG_MAP
            items:
              - key: filebeat.yml
                path: filebeat.yml
      containers:
        - name: $app_name-filebeat
          image: docker.elastic.co/beats/filebeat:7.8.0
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: logvolume
              mountPath: $LOGS_PATH
            - name: filebeat-config
              mountPath: /usr/share/filebeat/filebeat.yml
              subPath: filebeat.yml